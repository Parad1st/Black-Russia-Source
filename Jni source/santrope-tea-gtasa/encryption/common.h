#pragma once
#include <string>
typedef unsigned int uint32_t;

#define OBFUSCATE_KEY		0x12913AFB
#define OBFUSCATE_DATA(a)	((((a) << 19) | ((a) >> 13)) ^ OBFUSCATE_KEY)
#define UNOBFUSCATE_DATA(a) ((((a) ^ OBFUSCATE_KEY) >> 19) | (((a) ^ OBFUSCATE_KEY) << 13))

#define XOR_OBFUSCATE_KEY	0x10
#define XOR_OBFUSCATE(a) ((a) ^ XOR_OBFUSCATE_KEY)
#define XOR_UNOBFUSCATE(a) ((a) ^ XOR_OBFUSCATE_KEY)

const uint32_t g_iIdentifierVersion3 = OBFUSCATE_DATA(0x15128960);
const int g_iIdentifierVersion2 = OBFUSCATE_DATA(0x15128934);
const int g_iIdentifierVersion1 = OBFUSCATE_DATA(0x15128932);

const uint32_t g_i64Encrypt = OBFUSCATE_DATA(0x28FAAB82);

#pragma pack(push, 1)

struct SEncryptedHeader
{
	uint32_t dwVersion;
	uint32_t dwFileSize;
	uint32_t dwChunksEncrypted;
	uint32_t dwReserved[1];
};

#pragma pack(pop)

const uint32_t g_iEncryptionKeyVersion2[4] = { OBFUSCATE_DATA(0xFA216BD3u), OBFUSCATE_DATA(0x7183B32Fu), OBFUSCATE_DATA(0x15263F23u), OBFUSCATE_DATA(0x28421223u) };
const uint32_t g_iEncryptionKeyVersion2TXD[4] = { OBFUSCATE_DATA(0x085934D3u), OBFUSCATE_DATA(0x71C2122Fu), OBFUSCATE_DATA(0xAB352F23u), OBFUSCATE_DATA(0x2FF34613u) };

const uint8_t g_iEncryptionKey[16] = {
	XOR_OBFUSCATE(0xFA), XOR_OBFUSCATE(0x81), XOR_OBFUSCATE(0x32), XOR_OBFUSCATE(0x3A), 
	XOR_OBFUSCATE(0x4B), XOR_OBFUSCATE(0x1D), XOR_OBFUSCATE(0x61), XOR_OBFUSCATE(0x32), 
	XOR_OBFUSCATE(0xAF), XOR_OBFUSCATE(0x1E), XOR_OBFUSCATE(0x4F), XOR_OBFUSCATE(0xFD), 
	XOR_OBFUSCATE(0xFF), XOR_OBFUSCATE(0x10), XOR_OBFUSCATE(0x05), XOR_OBFUSCATE(0x19)
};
const uint8_t g_iEncryptionKeyTXD[16] = {
	XOR_OBFUSCATE(0xA8), XOR_OBFUSCATE(0x1A), XOR_OBFUSCATE(0x94), XOR_OBFUSCATE(0xFD),
	XOR_OBFUSCATE(0x23), XOR_OBFUSCATE(0x9F), XOR_OBFUSCATE(0x15), XOR_OBFUSCATE(0x19),
	XOR_OBFUSCATE(0x9A), XOR_OBFUSCATE(0xFA), XOR_OBFUSCATE(0x05), XOR_OBFUSCATE(0xAF),
	XOR_OBFUSCATE(0x82), XOR_OBFUSCATE(0xAB), XOR_OBFUSCATE(0x02), XOR_OBFUSCATE(0x92)
};

const uint8_t g_iIV[] = { 
	XOR_OBFUSCATE(0x10), XOR_OBFUSCATE(0x2F), XOR_OBFUSCATE(0xA), XOR_OBFUSCATE(0x04), 
	XOR_OBFUSCATE(0xAF), XOR_OBFUSCATE(0xDF), XOR_OBFUSCATE(0x10), XOR_OBFUSCATE(0x5F), 
	XOR_OBFUSCATE(0x38), XOR_OBFUSCATE(0x9D), XOR_OBFUSCATE(0xA0), XOR_OBFUSCATE(0xBF),
	XOR_OBFUSCATE(0xDC), XOR_OBFUSCATE(0xF), XOR_OBFUSCATE(0x0), XOR_OBFUSCATE(0xAA) };

#define PART_SIZE		2048
#define PART_SIZE_TXD	32

#define ENCRYPTION_DELTA 0x11FA8275

const uint32_t g_iIdentifierVersion4Binary = OBFUSCATE_DATA(0x15128970);

const uint32_t g_iEncryptionKeyVersion4Binary[8] = { 
	OBFUSCATE_DATA(0x1a902f89u), OBFUSCATE_DATA(0xF83BA92Fu), OBFUSCATE_DATA(0xE536DF24u), OBFUSCATE_DATA(0x2AA34E23u),
	OBFUSCATE_DATA(0x6606f136u), OBFUSCATE_DATA(0x7c2cfb8eu), OBFUSCATE_DATA(0xe2baaf37u), OBFUSCATE_DATA(0x242a347au)
};
const uint32_t g_iEncryptionKeyVersion4TXD[8] = {
	OBFUSCATE_DATA(0xc88b442cu), OBFUSCATE_DATA(0x12c97d85u), OBFUSCATE_DATA(0x272d5701u), OBFUSCATE_DATA(0x470f2935u),
	OBFUSCATE_DATA(0x537422a9u), OBFUSCATE_DATA(0x61ea9ce1u), OBFUSCATE_DATA(0x508929f7u), OBFUSCATE_DATA(0x52051942u)
};

const uint32_t g_iIdentifierVersion5Binary = OBFUSCATE_DATA(0x9C128A90);

const uint32_t g_iEncryptionKeyVersion5Binary[8] = {
	OBFUSCATE_DATA(0x1a902f89u), OBFUSCATE_DATA(0xF83BA92Fu), OBFUSCATE_DATA(0xE536DF24u), OBFUSCATE_DATA(0x2AA34E23u)
};